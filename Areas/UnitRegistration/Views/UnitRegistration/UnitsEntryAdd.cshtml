@model CPDMSEF.UnitRegistrationEF

@{
    <link rel="icon" type="image/x-icon" href="./images/departmentlogo.png">
    ViewData["Title"] = "Unit Registration";
    Layout = "~/Areas/UnitRegistration/Views/Shared/_UnitRegisLayout.cshtml";

}
<script src="http://code.jquery.com/jquery-1.11.0.min.js"></script>
<style>
    .form-group > img {
        position: absolute;
        right: 23px;
        top: 39px;
        width: 25px
    }
</style>
<style>
    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
        margin: 0;
    }</style>

<script>
 
    //$(document).ready(function () {
    //    $("#Submit").click(function () {
    //        debugger;
    //        if ($('#CompanyName').val().trim() == "") {
    //            swal("", "Please Enter Company Name", "warning");

    //            $("#CompanyName").focus();
    //            return false;
    //        }

    //    });
    //});
</script>


<div class="authentication-box">
    <div class="">
        <div class="page-header">
            <div class="">
                <div class="row">
                    <div class="col-lg-6">
                        <div class="page-header-left">
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <ol class="breadcrumb pull-right">
                            <li class="breadcrumb-item">
                                <a href="~/UnitRegistration/UnitRegistration/UnitDashboard"><i data-feather="home"></i></a>
                            </li>
                            <li class="breadcrumb-item active">Unit Entry</li>

                            <li class="breadcrumb-item active">Unit Regtistraiton</li>
                        </ol>
                    </div>
                </div>
                <div class="row card lg:w-[67rem] lg:ml-[14rem] ">
                    <div class=" p-0 ">
                        <div class=" tab2-card">
                            <div class="card-body">
                                <ul class="nav nav-tabs nav-material" id="top-tab" role="tablist">
                                    <li class="nav-item"> <a class="nav-link" id="contact-top-tab" data-bs-toggle="tab" href="#top-contact" role="tab" aria-controls="top-contact" aria-selected="false"><span class="icon-unlock me-2"></span><h3 style="text-transform: capitalize;">Unit Registration</h3></a> </li>
                                </ul>
                                <div role="tabpanel">
                                    @using (Html.BeginForm("UnitsEntryAdd", "UnitRegistration", FormMethod.Post, new { AUTOCOMPLETE = "Off", id = "form1" }))
                                    {
                                        <div class="row">

                                            <div class="col-sm">
                                        <div class="form-group">
                                            <label>Category</label> <label class="RequiredField">*</label><br />

                                            <input type="checkbox" value="1" name="CategoryC" id="checkbox1" onclick="updateCategoryCode()"> Chemicals
                                            <input type="checkbox" value="2" name="CategoryC" id="checkbox2" onclick="updateCategoryCode()"> Petro-Chemicals<br>
                                            @*<img src="~/image/infoicon.png" title="Please Check Unit Category; i.e.: Chemicals or Petro-Chemicals" onclick="" />*@

                                        </div>
                                        </div>
                                        </div>
                                        @Html.HiddenFor(m => m.CategoryCode, new { id = "categoryCodeHidden" })

                                        @*<div class="form-group">
                                    <label>Category</label> <label class="RequiredField">*</label>
                                    @Html.DropDownListFor(m => m.CategoryCode, ViewBag.ViewCategoryList as IEnumerable<SelectListItem>, "-- Select Category --", new { @class = "form-control",autofocus = "autofocus", required = "required" })
                                    </div>*@
                                        
                                        <div class="form-group ">
                                            <button type="button" class="form-control "
                                                style="background: #329466; color:white;">
                                               Location
                                            </button>
                                        </div>
                                        <div class="row">

                                            <div class="col-sm">
                                        <label>Location</label> <label class="RequiredField">*</label>
                                        <div class="form-group">
                                            @Html.TextBoxFor(m => m.Address, new { @class = "form-control",id = "address-input",required = "required",placeholder="Enter Address" })
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Unit Address; i.e.: New Delhi if map automatic navigation on new Delhi, zoom the map set pin location of Unit. After set pin Latitude and Longitude automatic set." onclick="" />*@

                                        </div>
                                        </div>
                                        </div>
                                        <div id="map" style="height: 400px;"></div>
                                        <div class="row">

                                            <div class="col-sm">
                                                <label>Latitude</label> <label class="RequiredField">*</label>
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => m.Lat, new { @class = "form-control",id = "address-latitude",required = "required",placeholder="Latitude",@readonly = "readonly" })
                                                
                                                </div>
                                            </div>

                                            <div class="col-sm">
                                                <label>Longitude</label> <label class="RequiredField">*</label>
                                                <div class="form-group">
                                                    @Html.TextBoxFor(m => m.Lon, new { @class = "form-control",id = "address-langitude",required = "required",placeholder="Longitude",@readonly = "readonly" })
                                                </div>
                                            </div>

                                        </div>
                                         <div class="row">

                                            <div class="col-sm">
                                        <div class="form-group">
                                            <label>State</label> <label class="RequiredField">*</label>
                                            @Html.DropDownListFor(m => m.State_Code, ViewBag.ViewStateList as IEnumerable<SelectListItem>, "-- Select State --", new { @class = "form-control", autofocus = "autofocus", required = "required" })
@*                                                    <img src="~/image/infoicon.png" title="Please Select State of Unit" onclick="" />
*@
                                            </div>  </div>  </div>
                                             <div class="row">

                                            <div class="col-sm">
                                        <div class="form-group">
                                            <label>District</label> <label class="RequiredField">*</label>
                                            <select name="District_Code" id="District_Code" class="form-control searchableselect">
                                                <option value="">-- Select District --</option>
                                                @{
                                                    List<CPDMSEF.MasterEF> lstDistrictModel = (List<CPDMSEF.MasterEF>)ViewData["DistrictDetails"];
                                                    if (lstDistrictModel != null)
                                                    {
                                                        foreach (var item in lstDistrictModel)
                                                        {
                                                            if (item.District_Code == Model.District_Code)
                                                            {
                                                                <option selected="selected" value="@item.District_Code">@item.District_Name</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.District_Code">@item.District_Name</option>
                                                            }
                                                        }
                                                    }
                                                }
                                            </select>
@*                                                    <img src="~/image/infoicon.png" title="Please Select District of Unit" onclick="" />
*@
                                        </div></div></div>
                                        @*@Html.DropDownListFor(m => m.District_Code, ViewBag.ViewDistrictList as IEnumerable<SelectListItem>, "--Select District--", new { @class = "form-control", autofocus = "autofocus", required = "required" })*@

                                        @* <div class="form-group">
                                    @Html.DropDownListFor(m => m.Block_Code, ViewBag.ViewBlockList as IEnumerable<SelectListItem>, "--Select Block--", new { @class = "form-control", autofocus = "autofocus", required = "required" })
                                    </div>*@
                                     <div class="row">

                                            <div class="col-sm">
                                        <div class="form-group">
                                            <label>Block</label> <label class="RequiredField"></label>
                                            <select name="Block_Code" id="Block_Code" class="form-control searchableselect">
                                                <option value="">-- Select Block --</option>
                                                @{
                                                    List<CPDMSEF.MasterEF> lstBlockModel = (List<CPDMSEF.MasterEF>)ViewData["BlockDetails"];
                                                    if (lstBlockModel != null)
                                                    {
                                                        foreach (var item in lstBlockModel)
                                                        {
                                                            if (item.Block_Code == Model.Block_Code)
                                                            {
                                                                <option selected="selected" value="@item.Block_Code">@item.Block_Name</option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@item.Block_Code">@item.Block_Name</option>
                                                            }
                                                        }
                                                    }
                                                }
                                            </select>
@*                                                    <img src="~/image/infoicon.png" title="Please Select Block of Unit" onclick="" />
*@
                                        </div> </div> </div>
                                         <div class="row">

                                            <div class="col-sm">
                                        <div class="form-group">
                                            <label>Pincode</label> <label class="RequiredField">*</label>
                                            @Html.TextBoxFor(m => m.Pincode, new { @class = "form-control",required = "required",placeholder="Enter PinCode",type = "number",pattern="[0-9]{4}", maxlength="6", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"})
@*                                                    <img src="~/image/infoicon.png" title="Please Enter Pin Code of Unit" onclick="" />
*@
                                        </div> </div> </div>

                                        <div class="form-group ">
                                            <button type="button" class="form-control "
                                                style="background: #329466; color: white;">
                                                Details Of Nodal
                                                Person
                                            </button>
                                        </div>

                                        <div class="row">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Name</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.ND_Name, new { @class = "form-control",required = "required",placeholder="Enter Name" })
                                                   @* <img src="~/image/infoicon.png" title="Please Enter Nodal Name " onclick="" />*@

                                                </div>
                                            </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label> Address</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.ND_Address, new { @class = "form-control",required = "required",placeholder="Enter Address" })
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Nodal Address" onclick="" />*@

                                                </div>
                                            </div>

                                        </div>

                                        <div class="row">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Mobile No</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.ND_Mobile_no, new { @class = "form-control",type = "number",required = "required",placeholder=" +91 Mobile Number",pattern="[0-9]{4}", maxlength="10", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",id = "mobileNumber" } )
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Valid Nodal Mobile; i.e.: 9304XXXXXX for Communication" onclick="" />*@

                                                </div>
                                            </div>

                                            <div class="col-sm">
                                                <div class="form-group">
                                                    <label>Email ID</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.ND_Email, new { @class = "form-control",required = "required",placeholder="abc@gmail.com",type="email" })
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Valid Nodal Email ID; i.e.: xyx[dot]comp[dot] [at]gmail[dot]com for Communication" onclick="" />*@

                                                </div>
                                            </div>

                                        </div>
                                        <div class="row">

                                            <div class="col-sm">
                                                <div class="form-group">
                                                <label>DOJ</label> <label class="RequiredField">*</label>
                                                @Html.TextBoxFor(m => m.ND_DOJ, new { @class = "form-control",required = "required",placeholder="Enter Date of Joining",type ="Date" ,  max = DateTime.Now.ToString("yyyy-MM-dd"),id="ND_DOJ"})
                                                @*<img src="~/image/infoicon.png" title="Please Enter Nodal DOJ at this unit; i.e.: 20/05/1999" style="right: 43px;" onclick="" />*@

                                            </div> </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>  </label> <label></label>
                                                </div>
                                            </div>

                                        </div>

                                        <br />
                                        <div class="form-group " style="display:none">
                                            <button type="button" class="form-control "
                                                style="background: #329466; color:white;">
                                                Details Of Person Authorized
                                                to Submit data
                                            </button>
                                        </div>

                                        <div class="row" style="display:none">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label> Name</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.AD_Name, new { @class = "form-control",placeholder="Enter Name" })
                                                                                          <img src="~/image/infoicon.png" title="Please Enter Company Name; i.e.: xyz Pvt Ltd." onclick="" />

                                                </div>
                                            </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Address</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.AD_Address, new { @class = "form-control",placeholder=" Enter Address" })
                                                                                           @*<img src="~/image/infoicon.png" title="Please Enter Company Name; i.e.: xyz Pvt Ltd." onclick="" />*@

                                                </div>
                                            </div>

                                        </div>

                                        <div class="row" style="display:none">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Mobile No</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.AD_Mobile_no, new{ @class = "form-control",type = "number",placeholder="+91 Mobile Number",pattern="[0-9]{10}", maxlength="10", oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);",id = "mobileNumber" } )
                                                                                           @*<img src="~/image/infoicon.png" title="Please Enter Company Name; i.e.: xyz Pvt Ltd." onclick="" />*@
 
                                                </div>
                                            </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Email ID</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.AD_Email, new { @class = "form-control",placeholder="abc@gmail.com" })
                                                                                          @*<img src="~/image/infoicon.png" title="Please Enter Company Name; i.e.: xyz Pvt Ltd." onclick="" />*@

                                                </div>
                                            </div>

                                        </div>
                                        <div class="row" style="display:none">

                                            <div class="col-sm">
                                                <label>DOJ</label> <label class="RequiredField">*</label>

                                                @Html.TextBoxFor(m => m.AD_DOJ, new { @class = "form-control",placeholder="Enter Date of Joining",type ="Date" ,   max = DateTime.Now.ToString("yyyy-MM-dd")})
                                                @*<img src="~/image/infoicon.png" title="Please Enter Company Name; i.e.: xyz Pvt Ltd." onclick="" />*@

                                            </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label></label> <label></label>

                                                </div>
                                            </div>

                                        </div>
                                        <br />
                                        <div class="form-group ">
                                            <button type="button" class="form-control "
                                                style="background: #329466; color: white;">
                                                Details Of Manpower in Unit
                                            </button>
                                        </div>

                                        <div class="row">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label> Total Number of Employees</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.TotalEmp, new { @class = "form-control",required = "required",type="number", placeholder="Total Number of Employees" })
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Total Number of Employees on this unit" onclick="" />*@

                                                </div>
                                            </div>

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Number of Employees on Permanent Role </label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.EmpOnPermRole, new { @class = "form-control",type="number",required = "required",placeholder="Number of Employees on Permanent Role" })
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Number of Employees on Permanent Role" onclick="" />*@

                                                </div>

                                            </div>

                                        </div>

                                        <div class="row">

                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>Number of Employees on contractual basis</label> <label class="RequiredField">*</label>
                                                    @Html.TextBoxFor(m => m.EmpOnContraRole, new { @class = "form-control",required = "required",type="number",placeholder="Number of Employees on contractual basis"})
                                                    @*<img src="~/image/infoicon.png" title="Please Enter Number of Employees on contractual basis" onclick="" />*@

                                                </div>
                                            </div>
                                            <div class="col-sm">

                                                <div class="form-group">
                                                    <label>  </label> <label></label>
                                                </div>
                                            </div>



                                        </div>
                                        <div class="row">
                                            <div class="col-sm" style="text-align: right;">
                                                <div class="form-button">
                                                    <input type="submit" value='@ViewBag.Button' style="background: #329466 !important;"
                                                    class="btn btn-primary" name="Submit" id="Submit" />
                                                    @*<button class="btn btn-primary" type="submit">Save</button>*@
                                                </div>
                                            </div>

                                            <div class="col-sm">
                                                <div class="form-button">
                                                    <button class="btn btn-primary" type="reset" style="background: #329466 !important;">Reset</button>
                                                </div>
                                            </div>

                                        </div>

                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                </div> <!-- <a href="index.html" class="btn btn-primary back-btn"><i data-feather="arrow-left"></i>back</a> -->
            </div>
        </div> <!-- <a href="index.html" class="btn btn-primary back-btn"><i data-feather="arrow-left"></i>back</a> -->

    </div>
</div>
<script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB5ypUzPuNVFWfMU5dsXZ-XVZ51zeshlS0&libraries=places,geometry&callback=initAutocomplete"></script>
<!-- Start State,City,Block -->
<script>

    $('#State_Code').change(function () {
        debugger;
        if ($('#State_Code').val() != "") {
            $.ajax({

                url: '/UnitRegistration/UnitRegistration/GetDistrictByStateId',
                data: { 'State_Code': $('#State_Code').val() },
                dataType: 'json',
                type: 'post',
                success: function (data) {
                    debugger;
                    var row = "";
                    $('#District_Code').html('');
                    row += "<option value=''>-- Select District --</option>";
                    $.each(data, function (ind, item) {
                        row += "<option value='" + item.district_Code + "'>" + item.district_Name + "</option>";
                    });
                    $('#District_Code').html(row);
                },
                error: function (err) {

                }
            });
        }
        else {
            var District2 = "";
            $('#District_Code').html('');
            District2 += "<option value=''>-- Select District --</option>";
            $('#District_Code').html(District2);

            $('#Block_Code').empty();
            $('#Block_Code').append("<option value=''>-- Select Block --</option>");


        }
    });

    $('#District_Code').change(function () {
        debugger;
        if ($('#District_Code').val() != "") {
            $.ajax({

                url: '/UnitRegistration/UnitRegistration/GetBlockByDistrictId',
                data: {
                    'State_Code': $('#State_Code').val(),
                    'District_Code': $('#District_Code').val()
                },
                dataType: 'json',
                type: 'post',
                success: function (data) {
                    debugger;
                    var row = "";
                    $('#Block_Code').html('');
                    row += "<option value=''>-- Select Block --</option>";
                    $.each(data, function (ind, item) {
                        row += "<option value='" + item.block_Code + "'>" + item.block_Name + "</option>";
                    });
                    $('#Block_Code').html(row);
                },
                error: function (err) {

                }
            });
        }
        else {

            $('#Block_Code').empty();
            $('#Block_Code').append("<option value=''>-- Select Block --</option>");


        }
    });
</script>
@*<script>
    var map;
    var marker;
    function initAutocomplete() {
        var initialLatLng = { lat: 22.469331442837003, lng: 78.82174886005811 }; // Initial map center coordinates

        map = new google.maps.Map(document.getElementById('map'), {
            center: initialLatLng,
            zoom: 12
        });

        marker = new google.maps.Marker({
            map: map,
            draggable: true
        });

        // Set initial marker position
        marker.setPosition(initialLatLng);

        // Update marker position and retrieve latitude and longitude on marker dragend
        marker.addListener('dragend', function () {
            updateLocation(marker.getPosition().lat(), marker.getPosition().lng());
        });


        var input = document.getElementById('address-input');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();
            console.log(place.formatted_address); // Example: Log the formatted address
            // You can access other place details like place.name, place.address_components, etc.

            if (!place.geometry) {
                // Handle the case when the selected place does not have geometry.
                return;
            }

            // Update marker position
            marker.setPosition(place.geometry.location);
            map.setCenter(place.geometry.location);
            map.setZoom(12);

            updateLocation(place.geometry.location.lat(), place.geometry.location.lng());
        });
        // Update marker position and retrieve latitude and longitude on map click
        map.addListener('click', function (event) {
            marker.setPosition(event.latLng);
            updateLocation(event.latLng.lat(), event.latLng.lng());
        });
    }


    //function initMap() {
    //    var initialLatLng = { lat: 37.7749, lng: -122.4194 }; // Initial map center coordinates

    //    map = new google.maps.Map(document.getElementById('map'), {
    //        center: initialLatLng,
    //        zoom: 12
    //    });

    //    marker = new google.maps.Marker({
    //        map: map,
    //        draggable: true
    //    });

    //    // Set initial marker position
    //    marker.setPosition(initialLatLng);

    //    // Update marker position when it's dragged
    //    marker.addListener('dragend', function () {
    //        updateLocation(marker.getPosition().lat(), marker.getPosition().lng());
    //    });

    //    // Update marker position when the map is clicked
    //    map.addListener('click', function (event) {
    //        marker.setPosition(event.latLng);
    //        updateLocation(marker.getPosition().lat(), marker.getPosition().lng());
    //    });
    //}

    function updateLocation(latitude, longitude) {
        // Assign the updated latitude and longitude to hidden form fields
        document.getElementById('address-latitude').value = latitude;
        document.getElementById('address-langitude').value = longitude;
    }
</script>
*@<script>
    document.querySelector("#mobileNumber").addEventListener("keypress", function (evt) {
        if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {
            evt.preventDefault();
        }
    });
    document.querySelector("#Pincode").addEventListener("keypress", function (evt) {
        if (evt.which != 8 && evt.which != 0 && evt.which < 48 || evt.which > 57) {
            evt.preventDefault();
        }
    });
</script>
<script>
    function updateCategoryCode() {
        var categoryCode = "";

        if ($("#checkbox1").is(":checked")) {
            categoryCode += "1";
        }

        if ($("#checkbox2").is(":checked")) {
            if (categoryCode !== "") {
                categoryCode += ",";
            }
            categoryCode += "2";
        }

        $("#categoryCodeHidden").val(categoryCode);
        console.log(categoryCode);
    }
</script>


<script>
    document.getElementById("form1").addEventListener("submit", function (event) {
        var categoryCode = document.getElementById("categoryCodeHidden").value;
        if (categoryCode === null || categoryCode.trim() === "") {
            swal("", "please check at least one category", "warning");
            event.preventDefault(); // Prevent form submission
        }
    });
    //$(document).ready(function () {



    //    $('#form1').submit(function (e) {
    //        if (!validatecheckbox()) {
    //            e.preventdefault();
    //        }
    //    });
    //    function validatecheckbox() {
    //        if (!$("#checkbox1").is(":checked") || !$("#checkbox2").is(":checked")) {
    //           alert("check");
    //            // swal("", "please check at least one category", "warning");

    //            return false;
    //        }
    //    }
    //});
</script>
<script>
    $(document).ready(function () {
        $('#ND_DOJ').keyup(function () {
            debugger;
            var enteredDate = new Date($(this).val());
            var currentDate = new Date();

            if (enteredDate > currentDate) {
                swal("", "Future dates not allowed", "warning");
                $(this).val('');
            }
        });
        $('#AD_DOJ').keyup(function () {
            debugger;
            var enteredDate = new Date($(this).val());
            var currentDate = new Date();

            if (enteredDate > currentDate) {
                swal("", "Future dates not allowed", "warning");
                $(this).val('');
            }
        });
    });
</script>
<script>
    document.getElementById("form1").addEventListener("submit", function (event) {
        var TotalEmp = document.getElementById("TotalEmp").value;
        var EmpOnContraRole = document.getElementById("EmpOnContraRole").value;
        var EmpOnPermRole = document.getElementById("EmpOnPermRole").value;
        if (!((parseInt(EmpOnContraRole) + parseInt(EmpOnPermRole)) <= parseInt(TotalEmp))) {

            swal("", "Contract and permanent employees should always be equal to or less than the total number of employees", "warning");
            event.preventDefault();

        }
    });
</script>

<script>
    var map;
    var marker;
    var initialLatLng;

    function initAutocomplete() {
        map = new google.maps.Map(document.getElementById('map'), {
            zoom: 12
        });

        marker = new google.maps.Marker({
            map: map,
            draggable: true
        });
      
        var circle = new google.maps.Circle({
            strokeColor: '#0000FF', // Blue color
            strokeOpacity: 0.8,
            strokeWeight: 2,
            fillColor: '#0000FF',
            fillOpacity: 0.35,
            map: map,
            center: initialLatLng,
            radius: 500 // 500 meters
        });

      
        marker.addListener('dragend', function () {
            var position = marker.getPosition();
            handleMarkerChange(position);
        });

        var input = document.getElementById('address-input');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();

            if (!place.geometry) {
                return;
            }

            if (isWithinRadius(place.geometry.location)) {
                marker.setPosition(place.geometry.location);
                map.setCenter(place.geometry.location);
                map.setZoom(12);

                updateLocation(place.geometry.location.lat(), place.geometry.location.lng());
                reverseGeocode(place.geometry.location);
            } else {
                                            swal("", "Please select a location within a 500-meter radius.", "warning");

                //alert("Please select a location within a 500-meter radius.");
            }
        });

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(
                function (position) {
                    initialLatLng = {
                        lat: position.coords.latitude,
                        lng: position.coords.longitude
                    };

                    if (isWithinRadius(initialLatLng)) {
                        marker.setPosition(initialLatLng);
                        map.setCenter(initialLatLng);
                        map.setZoom(12);

                        updateLocation(initialLatLng.lat, initialLatLng.lng);
                        reverseGeocode(initialLatLng);
                        
                        var bounds = new google.maps.LatLngBounds();
                        bounds.extend(initialLatLng);
                        var circle = new google.maps.Circle({
                            center: initialLatLng,
                            radius: 500, // 500 meters
                        });
                        bounds.union(circle.getBounds());
                        map.fitBounds(bounds);
                       
                        var circle = new google.maps.Circle({
                            strokeColor: '#0000FF', // Blue color
                            strokeOpacity: 0.8,
                            strokeWeight: 2,
                            
                            fillOpacity: 0.05,
                            map: map,
                            center: initialLatLng,
                            radius: 500 // 500 meters
                        });

                    } else {
                       
                        handleLocationError();
                    }
                },
                function (error) {
                    handleLocationError();
                }
            );
        } else {
            handleLocationError();
        }

        map.addListener('click', function (event) {
            handleMarkerChange(event.latLng);
            reverseGeocode(event.latLng);

        });
        marker.addListener('dragend', function () {
            var position = marker.getPosition();
            handleMarkerChange(position);
            reverseGeocode(event.latLng);
        });
    }

    function handleLocationError() {
        initialLatLng = { lat: 22.469331442837003, lng: 78.82174886005811 };

        map = new google.maps.Map(document.getElementById('map'), {
            center: initialLatLng,
            zoom: 12
        });

        marker = new google.maps.Marker({
            map: map,
            draggable: true
        });

        marker.setPosition(initialLatLng);
        updateLocation(marker.getPosition().lat(), marker.getPosition().lng());

        marker.addListener('dragend', function () {
            var position = marker.getPosition();
            updateLocation(position.lat(), position.lng());
            reverseGeocode(position);
           // handleMarkerChange(position);
        });

        var input = document.getElementById('address-input');
        var autocomplete = new google.maps.places.Autocomplete(input);

        autocomplete.addListener('place_changed', function () {
            var place = autocomplete.getPlace();

            if (!place.geometry) {
                return;
            }

            if (true) {
                marker.setPosition(place.geometry.location);
                map.setCenter(place.geometry.location);
                map.setZoom(12);

                updateLocation(place.geometry.location.lat(), place.geometry.location.lng());
                reverseGeocode(place.geometry.location);
            } else {
                // Display an error message or prevent the update
               // alert("Please select a location within a 500-meter radius.");
                            swal("", "Please select a location within a 500-meter radius.", "warning");

            }
        });

        map.addListener('click', function (event) {
            if (isWithinRadius(event.latLng)) {
                marker.setPosition(event.latLng);
                updateLocation(event.latLng.lat(), event.latLng.lng());
                reverseGeocode(initialLatLng);
                // Set zoom level based on the radius
                var bounds = new google.maps.LatLngBounds();
                bounds.extend(event.latLng);
                var circle = new google.maps.Circle({
                    center: event.latLng,
                    radius: 500, // 500 meters
                });
                bounds.union(circle.getBounds());
                map.fitBounds(bounds);
            } else {
                // Display an error message or prevent the update
                alert("Please select a location within a 500-meter radius.");
            }
        });
    }

    function updateLocation(latitude, longitude) {
        document.getElementById('address-latitude').value = latitude;
        document.getElementById('address-langitude').value = longitude;
    }

    function reverseGeocode(latLng) {
        var geocoder = new google.maps.Geocoder();

        geocoder.geocode({ 'location': latLng }, function (results, status) {
            if (status === 'OK') {
                if (results[0]) {
                    document.getElementById('address-input').value = results[0].formatted_address;
                } else {
                    document.getElementById('address-input').value = '';
                }
            } else {
                document.getElementById('address-input').value = '';
            }
        });
    }

    function isWithinRadius(position) {
        var distance = google.maps.geometry.spherical.computeDistanceBetween(initialLatLng, position);
        return distance <= 500; // 500 meters
    }
    function handleMarkerChange(position) {
        if (isWithinRadius(position)) {
            updateLocation(position.lat(), position.lng());
            reverseGeocode(position);

            
            var bounds = new google.maps.LatLngBounds();
            bounds.extend(position);
            var circle = new google.maps.Circle({
                center: position,
                radius: 500, // 500 meters
            });
            bounds.union(circle.getBounds());
            map.fitBounds(bounds);
        } else {
            
           // alert("Please select a location within a 500-meter radius.");
            swal("", "Please select a location within a 500-meter radius.", "warning");

            marker.setPosition(initialLatLng);
        }
    }
</script>

